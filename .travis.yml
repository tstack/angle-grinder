# Based on the "trust" template v0.1.2
# https://github.com/japaric/trust/tree/v0.1.2

dist: trusty
language: rust
services: docker
sudo: required

env:
  global:
    - CRATE_NAME=angle_grinder

matrix:
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-musl
      rust: stable

    # OSX
    - env: TARGET=x86_64-apple-darwin
      os: osx
      rust: stable

    # Testing other channels
    # Disabling temporarily because of https://github.com/rust-lang/rust/issues/57488
    # - env: TARGET=x86_64-unknown-linux-musl
    #  rust: nightly

before_install:
  - set -e
  - rustup component add rustfmt
  - cargo fmt -- --check
  - rustup self update

install:
  - source ~/.cargo/env || true

script:
  - bash ci/script.sh

before_script:
  - export PATH=$HOME/.cargo/bin:$PATH
  - cargo install cargo-update || echo "cargo-update already installed"
  - cargo install cargo-tarpaulin || echo "cargo tarpaulin already installed"
  - cargo install-update -a # update outdated cached binaries

after_script: set +e

# We need to install cross since we use it to actually build the binaries we want
before_deploy:
  - sh ci/install.sh
  - sh ci/before_deploy.sh

after_success:
  # measure code coverage and upload to coveralls.io
  - cargo tarpaulin --ciserver travis-ci --coveralls ${TRAVIS_JOB_ID}

deploy:
  api_key:
    secure: "keQyrUkgY3BZ7N3/miWKpwSm04SGe1DB9eJHg50wiX3Kxlnyl1jdkVYkWEJWuA0Yq6ZtjWfpInyKb7EG/0kUQWm6Cf0KxWUPZkt/HfPc+EPpDQAXyV6UB2fTSapjox12s/fvuWqywTX6izM7ndJqhhhGIOIfOZQ/+JOPlGCgtqYwa12JukvPvJtvg+9StXLgjYMntL1jR9YeozZe2YabO0whC373vzCZ6Jot2Oy7vmUP17djk39wYCRWdzJkJIAZslRKzRT1P4kpX8dqnLitsDGCCBS3Y6N3yicteolD+Fo0c0XFtY+JyQg7CvN6dQ5OAmeSBm+Sy38ny2F5ci3fgACQrQN1OmSwaF6JgRFzBV+yzZfZgTz60xdMsbguCW1okbZK4h1eYjCHru0rttgKNHgDKMQNVqqWY4gwgYLRP5qx0tQO+clfOIYja6KKWJOwNjs7x5t/Mxzcgoe3hZJ6uYtD04uNqM5C4ibtwQZMtf90z9IjWrBNyrNtj+sEjZyr1m02w9mGlDIaiftIes+ozrdNokfEs800jemZbsNO35VtAZJ+0eY9dbvZC8PyPwml0HcK/fpkO3qgCeMbyszHMSDAtq8i9VL/KanWVt2W288eBNAz/7Fq81PxuVBSYk4LNRx4C9BicKIZ3k91wFBDBlogBdG6g2wOeYCh7u9BttM="
  file_glob: true
  file: $CRATE_NAME-$TRAVIS_TAG-$TARGET.*
  on:
    # TODO Here you can pick which targets will generate binary releases
    # In this example, there are some targets that are tested using the stable
    # and nightly channels. This condition makes sure there is only one release
    # for such targets and that's generated using the stable channel
    # condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true

cache: cargo
before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

branches:
  only:
    # release tags
    - /^v\d+\.\d+\.\d+.*$/
    - master
    - cover1

notifications:
  email:
    on_success: never
